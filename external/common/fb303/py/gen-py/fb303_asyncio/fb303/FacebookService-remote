#!/usr/bin/env python
#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from __future__ import print_function
from __future__ import absolute_import

import os
import sys

if (not sys.argv[0].endswith("par") and
    not sys.argv[0].endswith("xar") and
    os.getenv('PAR_UNPACK_TMP') == None):

    f = open(sys.argv[0], "r")

    f.readline() # This will be #!/bin/bash
    line = f.readline()
    f.close()

    # The par generator tool always has '# This par was made' as the
    # second line. See fbcode/tools/make_par/make_par.py
    if (not line.startswith('# This par was made')):
        print("""WARNING
        You are trying to run *-remote.py which is
        incorrect as the paths are not set up correctly.
        Instead, you should generate your thrift file with
        thrift_library and then run the resulting
        *-remote.par.
        For more information, please read
        http://fburl.com/python-remotes""")
        exit()

from . import FacebookService
from . import ttypes

from thrift.util.remote import Function
from thrift.remote import Remote

FUNCTIONS = {
    'getName': Function('getName', 'FacebookService', 'string', []),
    'getVersion': Function('getVersion', 'FacebookService', 'string', []),
    'getStatus': Function('getStatus', 'FacebookService', 'fb_status', []),
    'getStatusDetails': Function('getStatusDetails', 'FacebookService', 'string', []),
    'getCounters': Function('getCounters', 'FacebookService', 'map<string, i64>', []),
    'getCounter': Function('getCounter', 'FacebookService', 'i64', [('string', 'key', 'string')]),
    'setOption': Function('setOption', 'FacebookService', 'void', [('string', 'key', 'string'), ('string', 'value', 'string')]),
    'getOption': Function('getOption', 'FacebookService', 'string', [('string', 'key', 'string')]),
    'getOptions': Function('getOptions', 'FacebookService', 'map<string, string>', []),
    'getCpuProfile': Function('getCpuProfile', 'FacebookService', 'string', [('i32', 'profileDurationInSec', 'i32')]),
    'aliveSince': Function('aliveSince', 'FacebookService', 'i64', []),
    'reinitialize': Function('reinitialize', 'FacebookService', None, []),
    'shutdown': Function('shutdown', 'FacebookService', None, []),
}

SERVICE_NAMES = ['FacebookService', ]

if __name__ == '__main__':
    Remote.run(FUNCTIONS, SERVICE_NAMES, FacebookService, ttypes, sys.argv, default_port=9090)
